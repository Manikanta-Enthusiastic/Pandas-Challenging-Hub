import pandas as pd
data = [[1, 'The Great Gatsby', 'F. Scott', 'Fiction', 180], [2, 'To Kill a Mockingbird', 'Harper Lee', 'Fiction', 281], [3, '1984', 'George Orwell', 'Dystopian', 328], [4, 'Pride and Prejudice', 'Jane Austen', 'Romance', 432], [5, 'The Catcher in the Rye', 'J.D. Salinger', 'Fiction', 277]]
books = pd.DataFrame(data, columns = ['book_id','title','author','genre','pages']).astype({
    "book_id": "int64",      # SERIAL -> int64
    "title": "string", # VARCHAR -> string dtype
    "author": "string",      # VARCHAR -> string dtype
    "genre": "string",       # VARCHAR -> string dtype
    "pages": "int64"         # INTEGER -> int64
})
data = [[1, 1, 'Alice', 50, 5], [2, 1, 'Bob', 60, 1], [3, 1, 'Carol', 40, 4], [4, 1, 'David', 30, 2], [5, 1, 'Emma', 45, 5], [6, 2, 'Frank', 80, 4], [7, 2, 'Grace', 70, 4], [8, 2, 'Henry', 90, 5], [9, 2, 'Ivy', 60, 4], [10, 2, 'Jack', 75, 4], [11, 3, 'Kate', 100, 2], [12, 3, 'Liam', 120, 1], [13, 3, 'Mia', 80, 2], [14, 3, 'Noah', 90, 1], [15, 3, 'Olivia', 110, 4], [16, 3, 'Paul', 95, 5], [17, 4, 'Quinn', 150, 3], [18, 4, 'Ruby', 140, 3], [19, 5, 'Sam', 80, 1], [20, 5, 'Tara', 70, 2]]
reading_sessions = pd.DataFrame(data, columns = ['session_id', 'book_id', 'reader_name', 'pages_read', 'session_rating']).astype({
    "session_id": "int64",
    "book_id": "int64",          # NUMBER -> int64
    "reader_name": "string",     # VARCHAR2 -> string dtype
    "pages_read": "int64",       # NUMBER -> int64
    "session_rating": "int64"  # NUMBER -> int64
})

def read_books(reading_sessions):
  result = reading_sessions.groupby('book_id', as_index=False).agg(total_sessions = ('session_id', 'count'), highest_rating = ('session_rating', 'max'),
                                                              lowest_rating = ('session_rating', 'min'))
  extreme_counts = reading_sessions.groupby('book_id')['session_rating'] \
    .apply(lambda x: ((x <= 2) | (x >= 4)).sum()) \
    .reset_index(name='extreme_ratings')
  result = result.merge(extreme_counts, on='book_id')
  return result[(result['total_sessions']>=5) & (result['highest_rating']>=4) & (result['lowest_rating']<=2)]

def merged_df(df, books):
  df['rating_spread'] = df['highest_rating'] - df['lowest_rating']
  df['polarization_score'] = round(df['extreme_ratings'] / df['total_sessions'],2)
  return df.merge(books, on='book_id', how='inner')[['book_id','title','author','genre','pages','rating_spread','polarization_score']] \
  .sort_values(by=['polarization_score', 'title'], ascending=[False, False]).reset_index(drop=True)

def main():
  pd_1 = read_books(reading_sessions)
  pd_2 = merged_df(pd_1, books)
  print(pd_2)

if __name__ == "__main__":
  main()
